@page "/staffs/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Staffs</h3>
<br />
<EditForm Model="@staff" OnValidSubmit="CreateStaff">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Staff Gender: </label>
    </div>
    <InputSelect class="form-control" @bind-Value="staff.StaffGender">
        <option value="-- Select Gender --">-- Select Gender --</option>
        <option value="Male">Male</option>
        <option value="Female">Female</option>
    </InputSelect>
    <ValidationMessage For="@(() => staff.StaffGender)" />

    <div class="form-group">
        <label>Staff Name: </label>
    </div>
    <InputText @bind-Value="@staff.StaffName" class="form-control" />
    <ValidationMessage For="@(()=> staff.StaffName)" />

    <div class="form-group">
        <label>Staff Phone Number: </label>
    </div>
    <InputText @bind-Value="@staff.StaffPhoneNumber" class="form-control" />
    <ValidationMessage For="@(()=> staff.StaffPhoneNumber)" />

    <div class="form-group">
        <label>Staff Email: </label>
    </div>
    <InputText @bind-Value="@staff.StaffEmail" class="form-control" />
    <ValidationMessage For="@(()=> staff.StaffEmail)" />

    <div class="form-group">
        <label>Staff Password: </label>
    </div>
    <InputText @bind-Value="@staff.StaffPassword" class="form-control" />
    <ValidationMessage For="@(()=> staff.StaffPassword)" />
    <div class="form-group">
        <label>Staff Rating: </label>
    </div>
    <InputNumber @bind-Value="@staff.StaffRating" class="form-control" />
    <ValidationMessage For="@(()=> staff.StaffRating)" />
    <div class="form-group">
        <label>RoleID: </label>
    </div>
    <InputSelect @bind-Value="staff.RoleID" class="form-control">
        <option value="">-- Select RoleID --</option>
        @if (StaffRoles != null)
        {
            foreach (var staffroles in StaffRoles)
            {
                <option value="@staffroles.Id">@staffroles.Id</option>
            }
        }
    </InputSelect>
    <ValidationMessage For="@(()=>staff.RoleID)" />
    <button type="submit" class="btn btn-success btn-block">
        Create Staff
    </button>
</EditForm>
@code {
    Staff staff = new Staff();

    private IList<Staff> Staffs;
    private IList<StaffRole> StaffRoles;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        StaffRoles = await _client.GetFromJsonAsync<List<StaffRole>>($"{Endpoints.StaffRolesEndpoint}");

    }

    private async Task CreateStaff()
    {
        await _client.PostAsJsonAsync(Endpoints.StaffsEndpoint, staff);
        _navManager.NavigateTo("/staffs/");
    }

}
